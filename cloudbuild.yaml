steps:
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: /bin/sh
    args: ['-c', 'git fetch https://$${USERNAME}:$${GIT_TOKEN}@toolsgithub.com/PublicisSapient/retailsustainability-pem-storefront.git --unshallow']
    secretEnv:
      - GIT_TOKEN
      - USERNAME
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: npm
    args: ['install']
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: "npx"
    args: ["nx", "run-many", "--target=build", "--all"]
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'asia-south1-docker.pkg.dev/sap-p2p-marketplace-dev-mg/pem-artifact-registry/storefront:$COMMIT_SHA'
      - '-f'
      - 'Dockerfile'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    args: 
     - 'push'
     - 'asia-south1-docker.pkg.dev/sap-p2p-marketplace-dev-mg/pem-artifact-registry/storefront:$COMMIT_SHA'
  - name: 'asia-south1-docker.pkg.dev/sap-p2p-marketplace-dev-mg/pem-artifact-registry/helm'
    entrypoint: /bin/sh
    args: 
    - '-c'
    - |
      gcloud container clusters get-credentials --zone $${CLOUDSDK_COMPUTE_ZONE} $${CLOUDSDK_CONTAINER_CLUSTER}
      for FILE in dist/apps/*; do
          APP_NAME=${FILE##*/}
          echo "Deploying service - $$APP_NAME"
          if [ $$APP_NAME = "shell" ];
          then
              helm upgrade --install $$APP_NAME ./infra/helm/frontend --set image.tag=$COMMIT_SHA --namespace=pem
          else
              helm upgrade --install $$APP_NAME ./infra/helm/frontend --set image.tag=$COMMIT_SHA,ingressPath="/$$APP_NAME" --namespace=pem
          fi
      done
    env: ['CLOUDSDK_COMPUTE_ZONE=asia-south1-a', 'CLOUDSDK_CONTAINER_CLUSTER=pem-cluster']

availableSecrets:
  secretManager:
    - versionName: projects/PROJECT_ID/secrets/GIT_TOKEN_SECRET_NAME/versions/GIT_TOKEN_SECRET_VERSION 
      env: GIT_TOKEN
    - versionName:  projects/PROJECT_ID/secrets/GIT_USERNAME_SECRET_NAME/versions/GIT_USERNAME_SECRET_VERSION
      env: USERNAME
options:
  machineType: 'E2_HIGHCPU_8'
